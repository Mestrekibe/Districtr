{"version":3,"file":"register.js","sources":["../../src/api/client.js","../../src/components/form.js","../../src/routes.js","../../src/views/register.js","../../src/utils.js","../../src/api/auth.js"],"sourcesContent":["const API_URL = \"https://api.districtr.org\";\n\nexport default class ApiClient {\n    constructor(base_url, middleware) {\n        if (base_url === undefined || base_url === null) {\n            base_url = API_URL;\n        }\n        this.base_url = base_url;\n        if (middleware === null || middleware === undefined) {\n            middleware = [];\n        }\n        this.middleware = middleware;\n    }\n    request(uri, method, body, headers) {\n        let requestBody;\n        if (body !== null && body !== undefined) {\n            requestBody = JSON.stringify(body);\n        }\n        return fetch(\n            this.base_url + uri,\n            // Pass the request options to each middleware function for modification\n            this.middleware.reduce(\n                (requestOptions, middleware) => middleware(requestOptions),\n                {\n                    method: method,\n                    body: requestBody,\n                    headers: { \"Content-Type\": \"application/json\", ...headers }\n                }\n            )\n        );\n    }\n    get(uri) {\n        return this.request(uri, \"GET\");\n    }\n    post(uri, body) {\n        return this.request(uri, \"POST\", body);\n    }\n    put(uri, body) {\n        return this.request(uri, \"PUT\", body);\n    }\n    delete(uri, body) {\n        return this.request(uri, \"DELETE\", body);\n    }\n    patch(uri, body) {\n        return this.request(uri, \"PATCH\", body);\n    }\n}\n\nexport const client = new ApiClient(API_URL);\n","export function popupMessage({ message, raw }) {\n    const messageElement = document.getElementById(\"popup-message\");\n    messageElement.classList.remove(\"hidden\");\n    if (raw === true) {\n        messageElement.innerHTML = message;\n    } else {\n        messageElement.innerText = message;\n    }\n    return messageElement;\n}\n\nexport function errorMessage(message) {\n    const element = popupMessage({ message });\n    element.classList.add(\"alert\");\n}\n\nexport const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport function isEmail(value) {\n    return value.match(emailRegex);\n}\n\nfunction onAllChanges(element, f) {\n    element.onblur = f;\n    element.onfocus = f;\n    element.oninput = f;\n}\n\nexport function createForm(elementIds, formId, validate, onSubmit) {\n    const elements = elementIds.reduce((lookup, elementId) => {\n        const element = document.getElementById(elementId);\n        return { ...lookup, [elementId]: element };\n    }, {});\n\n    elementIds.forEach(elementId => {\n        onAllChanges(elements[elementId], () => validate(elements));\n    });\n\n    const form = document.getElementById(formId);\n    form.onsubmit = event => {\n        event.preventDefault();\n        if (!validate(elements)) {\n            return;\n        }\n        onSubmit(elements);\n    };\n}\n","const routes = {\n    \"/\": \"./\",\n    \"/new\": \"./new\",\n    \"/edit\": \"./edit\",\n    \"/register\": \"./register\",\n    \"/request\": \"./request\",\n    \"/signin\": \"./signin\",\n    \"/signout\": \"./signout\"\n};\n\nexport function navigateTo(route) {\n    if (routes.hasOwnProperty(route)) {\n        location.assign(routes[route]);\n    } else {\n        throw Error(\"The requested route does not exist: \" + route);\n    }\n}\n\nexport function startNewPlan(place, problem, units, planId) {\n    localStorage.setItem(\"place\", JSON.stringify(place));\n    localStorage.setItem(\"units\", JSON.stringify(units));\n    localStorage.setItem(\"districtingProblem\", JSON.stringify(problem));\n    localStorage.removeItem(\"assignment\");\n    localStorage.removeItem(\"planId\");\n    if (planId !== null && planId !== undefined) {\n        localStorage.setItem(\"planId\", planId);\n    }\n    navigateTo(\"/edit\");\n}\n\nexport function loadPlan({ place, problem, units, planId, assignment }) {\n    localStorage.setItem(\"place\", JSON.stringify(place));\n    localStorage.setItem(\"units\", JSON.stringify(units));\n    localStorage.setItem(\"districtingProblem\", JSON.stringify(problem));\n    localStorage.setItem(\"assignment\", JSON.stringify(assignment));\n    localStorage.setItem(\"planId\", planId);\n    navigateTo(\"/edit\");\n}\n","import { registerUser } from \"../api/auth\";\nimport { createForm, errorMessage, isEmail } from \"../components/form\";\nimport { navigateTo } from \"../routes\";\nimport { handleResponse } from \"../utils\";\n\nfunction onSubmit({ first, last, email }) {\n    registerUser({\n        first: first.value,\n        last: last.value,\n        email: email.value\n    })\n        .then(\n            handleResponse({\n                201: () => {\n                    document.getElementById(\"form\").remove();\n                    document.getElementById(\"email-message\").innerText =\n                        \"Success! We sent you an email with a link to sign in.\";\n                    window.setTimeout(() => navigateTo(\"/\"), 2000);\n                },\n                default: () => {\n                    errorMessage(\n                        \"We're sorry. Registration is currently unavailable.\"\n                    );\n                }\n            })\n        )\n        .catch(() => {\n            errorMessage(\n                \"We're having trouble accessing our registration service. \" +\n                    \"Are you connected to the internet?\"\n            );\n        });\n}\n\nfunction validate({ first, last, email, submit }) {\n    const valid =\n        first.value.length > 0 &&\n        last.value.length > 0 &&\n        email.value.length > 0 &&\n        isEmail(email.value);\n    submit.disabled = !valid;\n    return valid;\n}\n\nexport default function main() {\n    createForm(\n        [\"first\", \"last\", \"email\", \"submit\"],\n        \"form\",\n        validate,\n        onSubmit\n    );\n}\n","export function zeros(n) {\n    let vector = [];\n    for (let i = 0; i < n; i++) {\n        vector.push(0);\n    }\n    return vector;\n}\n\n/**\n * Summarize an array of data. Returns `{min, max, total, length}`.\n *\n * @param {string or function} getter The string key of one of the feature's\n *  properties, or a function mapping each feature to the desired data.\n */\nexport function summarize(data) {\n    return {\n        min: Math.min(...data),\n        max: Math.max(...data),\n        total: sum(data),\n        length: data.length\n    };\n}\n\n// From https://stackoverflow.com/questions/2901102/\n// how-to-print-a-number-with-commas-as-thousands-separators-in-javascript#2901298\nexport function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport function roundToDecimal(n, places) {\n    return Math.round(n * Math.pow(10, places)) / Math.pow(10, places);\n}\n\nexport function sum(values) {\n    return values.reduce((total, value) => total + value, 0);\n}\n\nexport function divideOrZeroIfNaN(x, y) {\n    return [\"case\", [\">\", y, 0], [\"/\", x, y], 0];\n}\n\nexport function extent(values) {\n    return Math.min(...values) - Math.max(...values);\n}\n\nexport function asPercent(value, total) {\n    return `${Math.round(100 * (value / total))}%`;\n}\n\nexport function replace(list, i, item) {\n    return [...list.slice(0, i), item, ...list.slice(i + 1)];\n}\n\n// Light-weight redux implementation\n\nexport function createReducer(handlers) {\n    return (state, action) => {\n        if (handlers.hasOwnProperty(action.type)) {\n            return handlers[action.type](state, action);\n        }\n        return state;\n    };\n}\n\nexport function combineReducers(reducers) {\n    return (state, action) => {\n        let hasChanged = false;\n        let nextState = {};\n\n        for (let key in reducers) {\n            nextState[key] = reducers[key](state[key], action);\n            hasChanged = hasChanged || nextState[key] !== state[key];\n        }\n\n        return hasChanged ? nextState : state;\n    };\n}\n\nexport function createActions(handlers) {\n    let actions = {};\n    for (let actionType in handlers) {\n        actions[actionType] = actionInfo => ({\n            ...actionInfo,\n            type: actionType\n        });\n    }\n    return actions;\n}\n\nexport function bindDispatchToActions(actions, dispatch) {\n    let boundActions = {};\n    for (let actionType in actions) {\n        boundActions[actionType] = actionInfo =>\n            dispatch(boundActions[actionType](actionInfo));\n    }\n    return boundActions;\n}\n\n/**\n * Handle HTTP responses by providing handlers for HTTP status codes.\n *\n * The `handlers` object should have handlers for each status code you want\n * to handle (e.g. 200, 500) as well as a \"default\" handler for all other\n * cases.\n *\n * @param {object} handlers\n */\nexport function handleResponse(handlers) {\n    handlers = {\n        // eslint-disable-next-line no-console\n        default: resp => console.error(\"Request failed\", resp),\n        ...handlers\n    };\n    return response => {\n        if (handlers.hasOwnProperty(response.status)) {\n            return handlers[response.status](response);\n        } else {\n            return handlers.default(response);\n        }\n    };\n}\n\nexport function isString(x) {\n    return typeof x === \"string\" || x instanceof String;\n}\n\n// Copied from stackoverflow https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\nexport function dec2hex(dec) {\n    return (\"0\" + dec.toString(16)).substr(-2);\n}\n\nexport function generateId(len) {\n    const arr = new Uint8Array((len || 40) / 2);\n    const crypto = window.crypto ? window.crypto : window.msCrypto;\n    crypto.getRandomValues(arr);\n    return Array.from(arr, dec2hex).join(\"\");\n}\n","import { handleResponse, isString } from \"../utils\";\nimport { client } from \"./client\";\n\nexport function registerUser({ first, last, email }) {\n    return client.post(\"/register/\", { first, last, email });\n}\n\nexport function signInUser({ email }) {\n    return client.post(\"/signin/\", { email });\n}\n\nexport function signOut() {\n    localStorage.clear();\n}\n\nexport default function initializeAuthContext(client) {\n    return getBearerToken().then(token => {\n        if (token === null || token === undefined) {\n            signOut();\n        } else {\n            localStorage.setItem(\"bearerToken\", token);\n            const authMiddleware = request => {\n                request.headers.Authorization = `Bearer ${token}`;\n                return request;\n            };\n            client.middleware.push(authMiddleware);\n\n            const user = atob(token.split(\".\")[1]);\n            if (user) {\n                localStorage.setItem(\"user\", user);\n            }\n            return JSON.parse(user);\n        }\n        return null;\n    });\n}\n\n/**\n * Retrieves Bearer token for authentication and authorization\n * with the Districtr API.\n */\nexport function getBearerToken() {\n    // Check localStorage for the Bearer token\n    let bearerToken = localStorage.getItem(\"bearerToken\");\n    if (bearerToken !== null && bearerToken !== undefined) {\n        return new Promise(resolve => resolve(bearerToken));\n    }\n    // If that's missing, get signInToken from the URL query parameters\n    // and then POST that to /signin/ to get a Bearer token\n    const signInToken = getSignInToken();\n    if (signInToken !== null && signInToken !== undefined) {\n        return fetchBearerToken(signInToken);\n    } else {\n        return new Promise(resolve => resolve(null));\n    }\n}\n\nconst fetchBearerTokenHandlers = {\n    201: resp => resp.json(),\n    default: () => null\n};\n\nexport function fetchBearerToken(signInToken) {\n    return client\n        .post(\"/tokens/\", { token: signInToken })\n        .then(handleResponse(fetchBearerTokenHandlers))\n        .then(payload => {\n            if (payload === undefined || payload === null) {\n                return null;\n            }\n            const { token } = payload;\n            if (token !== undefined && token !== null) {\n                return token;\n            }\n            return null;\n        });\n}\n\nfunction getSignInToken() {\n    let signInToken = getSignInTokenFromURL(window.location.search);\n    if (\n        signInToken !== null &&\n        isString(signInToken) &&\n        signInToken.length > 0\n    ) {\n        return signInToken;\n    } else {\n        return null;\n    }\n}\n\nfunction getSignInTokenFromURL(search) {\n    if (search.length <= \"?token=\".length) {\n        return null;\n    }\n    return search.slice(\"?token=\".length);\n}\n"],"names":["API_URL","client","base_url","middleware","uri","method","body","headers","requestBody","JSON","stringify","fetch","this","reduce","requestOptions","request","errorMessage","message","raw","messageElement","document","getElementById","classList","remove","innerHTML","innerText","popupMessage","add","emailRegex","routes","onSubmit","handlers","first","last","email","post","registerUser","value","then","window","setTimeout","route","hasOwnProperty","Error","location","assign","navigateTo","default","resp","console","error","response","status","catch","validate","submit","valid","length","match","disabled","elementIds","formId","elements","lookup","elementId","forEach","element","f","onblur","onfocus","oninput","onsubmit","event","preventDefault","createForm"],"mappings":"8xBAAA,IAAMA,EAAU,4BAgDHC,EAAS,0BA7CNC,EAAUC,yGACdD,MAAAA,IACAA,EAAWF,QAEVE,SAAWA,EACZC,MAAAA,IACAA,EAAa,SAEZA,WAAaA,yDAEdC,EAAKC,EAAQC,EAAMC,OACnBC,SACAF,MAAAA,IACAE,EAAcC,KAAKC,UAAUJ,IAE1BK,MACHC,KAAKV,SAAWE,OAEXD,WAAWU,OACZ,SAACC,EAAgBX,UAAeA,EAAWW,IAC3C,CACIT,OAAQA,EACRC,KAAME,EACND,0BAA2B,oBAAuBA,kCAK9DH,UACOQ,KAAKG,QAAQX,EAAK,oCAExBA,EAAKE,UACCM,KAAKG,QAAQX,EAAK,OAAQE,+BAEjCF,EAAKE,UACEM,KAAKG,QAAQX,EAAK,MAAOE,kCAE7BF,EAAKE,UACDM,KAAKG,QAAQX,EAAK,SAAUE,iCAEjCF,EAAKE,UACAM,KAAKG,QAAQX,EAAK,QAASE,wCAIpB,CAAcN,GCrC7B,SAASgB,EAAaC,IAXtB,gBAAwBA,IAAAA,QAASC,IAAAA,IAC9BC,EAAiBC,SAASC,eAAe,wBAC/CF,EAAeG,UAAUC,OAAO,WACpB,IAARL,EACAC,EAAeK,UAAYP,EAE3BE,EAAeM,UAAYR,EAExBE,GAISO,CAAa,CAAET,QAAAA,IACvBK,UAAUK,IAAI,SAGnB,IAAMC,EAAa,wIChB1B,IAAMC,EAAS,KACN,YACG,gBACC,qBACI,wBACD,sBACD,sBACC,aCFhB,SAASC,SCsGsBC,EDtGXC,IAAAA,MAAOC,IAAAA,KAAMC,IAAAA,OEF1B,gBAAwBF,IAAAA,MAAOC,IAAAA,KAAMC,IAAAA,aACjCjC,EAAOkC,KAAK,aAAc,CAAEH,MAAAA,EAAOC,KAAAA,EAAMC,MAAAA,KFEhDE,CAAa,CACTJ,MAAOA,EAAMK,MACbJ,KAAMA,EAAKI,MACXH,MAAOA,EAAMG,QAEZC,MCgGsBP,ED/FJ,KACN,WACDX,SAASC,eAAe,QAAQE,SAChCH,SAASC,eAAe,iBAAiBI,UACrC,wDACJc,OAAOC,WAAW,kBDP/B,SAAoBC,OACnBZ,EAAOa,eAAeD,SAGhBE,MAAM,uCAAyCF,GAFrDG,SAASC,OAAOhB,EAAOY,ICKaK,CAAW,MAAM,MAE7CC,QAAS,WACL/B,EACI,yDCuFpBe,KAEIgB,QAAS,SAAAC,UAAQC,QAAQC,MAAM,iBAAkBF,KAC9CjB,GAEA,SAAAoB,UACCpB,EAASW,eAAeS,EAASC,QAC1BrB,EAASoB,EAASC,QAAQD,GAE1BpB,EAASgB,QAAQI,MD3F3BE,MAAM,WACHrC,EACI,iGAMhB,SAASsC,SAAWtB,IAAAA,MAAOC,IAAAA,KAAMC,IAAAA,MAAOqB,IAAAA,OAC9BC,EACFxB,EAAMK,MAAMoB,OAAS,GACrBxB,EAAKI,MAAMoB,OAAS,GACpBvB,EAAMG,MAAMoB,OAAS,GACbvB,EAAMG,MFpBLqB,MAAM9B,UEqBnB2B,EAAOI,UAAYH,EACZA,SAGI,YFhBR,SAAoBI,EAAYC,EAAQP,EAAUxB,OAC/CgC,EAAWF,EAAW/C,OAAO,SAACkD,EAAQC,eAE5BD,OAASC,EADL5C,SAASC,eAAe2C,MAEzC,IAEHJ,EAAWK,QAAQ,SAAAD,GAZvB,IAAsBE,EAASC,EAATD,EAaDJ,EAASE,GAbCG,EAaW,kBAAMb,EAASQ,IAZrDI,EAAQE,OAASD,EACjBD,EAAQG,QAAUF,EAClBD,EAAQI,QAAUH,IAaL/C,SAASC,eAAewC,GAChCU,SAAW,SAAAC,GACZA,EAAMC,iBACDnB,EAASQ,IAGdhC,EAASgC,IECbY,CACI,CAAC,QAAS,OAAQ,QAAS,UAC3B,OACApB,EACAxB"}