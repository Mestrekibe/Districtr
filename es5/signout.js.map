{"version":3,"file":"signout.js","sources":["../../src/api/client.js","../../src/routes.js","../../src/api/auth.js","../../src/views/signout.js"],"sourcesContent":["const API_URL = \"https://api.districtr.org\";\n\nexport default class ApiClient {\n    constructor(base_url, middleware) {\n        if (base_url === undefined || base_url === null) {\n            base_url = API_URL;\n        }\n        this.base_url = base_url;\n        if (middleware === null || middleware === undefined) {\n            middleware = [];\n        }\n        this.middleware = middleware;\n    }\n    request(uri, method, body, headers) {\n        let requestBody;\n        if (body !== null && body !== undefined) {\n            requestBody = JSON.stringify(body);\n        }\n        return fetch(\n            this.base_url + uri,\n            // Pass the request options to each middleware function for modification\n            this.middleware.reduce(\n                (requestOptions, middleware) => middleware(requestOptions),\n                {\n                    method: method,\n                    body: requestBody,\n                    headers: { \"Content-Type\": \"application/json\", ...headers }\n                }\n            )\n        );\n    }\n    get(uri) {\n        return this.request(uri, \"GET\");\n    }\n    post(uri, body) {\n        return this.request(uri, \"POST\", body);\n    }\n    put(uri, body) {\n        return this.request(uri, \"PUT\", body);\n    }\n    delete(uri, body) {\n        return this.request(uri, \"DELETE\", body);\n    }\n    patch(uri, body) {\n        return this.request(uri, \"PATCH\", body);\n    }\n}\n\nexport const client = new ApiClient(API_URL);\n","const routes = {\n    \"/\": \"./\",\n    \"/new\": \"./new\",\n    \"/edit\": \"./edit\",\n    \"/register\": \"./register\",\n    \"/request\": \"./request\",\n    \"/signin\": \"./signin\",\n    \"/signout\": \"./signout\"\n};\n\nexport function navigateTo(route) {\n    if (routes.hasOwnProperty(route)) {\n        location.assign(routes[route]);\n    } else {\n        throw Error(\"The requested route does not exist: \" + route);\n    }\n}\n\nexport function startNewPlan(place, problem, units, planId) {\n    localStorage.setItem(\"place\", JSON.stringify(place));\n    localStorage.setItem(\"units\", JSON.stringify(units));\n    localStorage.setItem(\"districtingProblem\", JSON.stringify(problem));\n    localStorage.removeItem(\"assignment\");\n    localStorage.removeItem(\"planId\");\n    if (planId !== null && planId !== undefined) {\n        localStorage.setItem(\"planId\", planId);\n    }\n    navigateTo(\"/edit\");\n}\n\nexport function loadPlan({ place, problem, units, planId, assignment }) {\n    localStorage.setItem(\"place\", JSON.stringify(place));\n    localStorage.setItem(\"units\", JSON.stringify(units));\n    localStorage.setItem(\"districtingProblem\", JSON.stringify(problem));\n    localStorage.setItem(\"assignment\", JSON.stringify(assignment));\n    localStorage.setItem(\"planId\", planId);\n    navigateTo(\"/edit\");\n}\n","import { handleResponse, isString } from \"../utils\";\nimport { client } from \"./client\";\n\nexport function registerUser({ first, last, email }) {\n    return client.post(\"/register/\", { first, last, email });\n}\n\nexport function signInUser({ email }) {\n    return client.post(\"/signin/\", { email });\n}\n\nexport function signOut() {\n    localStorage.clear();\n}\n\nexport default function initializeAuthContext(client) {\n    return getBearerToken().then(token => {\n        if (token === null || token === undefined) {\n            signOut();\n        } else {\n            localStorage.setItem(\"bearerToken\", token);\n            const authMiddleware = request => {\n                request.headers.Authorization = `Bearer ${token}`;\n                return request;\n            };\n            client.middleware.push(authMiddleware);\n\n            const user = atob(token.split(\".\")[1]);\n            if (user) {\n                localStorage.setItem(\"user\", user);\n            }\n            return JSON.parse(user);\n        }\n        return null;\n    });\n}\n\n/**\n * Retrieves Bearer token for authentication and authorization\n * with the Districtr API.\n */\nexport function getBearerToken() {\n    // Check localStorage for the Bearer token\n    let bearerToken = localStorage.getItem(\"bearerToken\");\n    if (bearerToken !== null && bearerToken !== undefined) {\n        return new Promise(resolve => resolve(bearerToken));\n    }\n    // If that's missing, get signInToken from the URL query parameters\n    // and then POST that to /signin/ to get a Bearer token\n    const signInToken = getSignInToken();\n    if (signInToken !== null && signInToken !== undefined) {\n        return fetchBearerToken(signInToken);\n    } else {\n        return new Promise(resolve => resolve(null));\n    }\n}\n\nconst fetchBearerTokenHandlers = {\n    201: resp => resp.json(),\n    default: () => null\n};\n\nexport function fetchBearerToken(signInToken) {\n    return client\n        .post(\"/tokens/\", { token: signInToken })\n        .then(handleResponse(fetchBearerTokenHandlers))\n        .then(payload => {\n            if (payload === undefined || payload === null) {\n                return null;\n            }\n            const { token } = payload;\n            if (token !== undefined && token !== null) {\n                return token;\n            }\n            return null;\n        });\n}\n\nfunction getSignInToken() {\n    let signInToken = getSignInTokenFromURL(window.location.search);\n    if (\n        signInToken !== null &&\n        isString(signInToken) &&\n        signInToken.length > 0\n    ) {\n        return signInToken;\n    } else {\n        return null;\n    }\n}\n\nfunction getSignInTokenFromURL(search) {\n    if (search.length <= \"?token=\".length) {\n        return null;\n    }\n    return search.slice(\"?token=\".length);\n}\n","import { signOut } from \"../api/auth\";\nimport { navigateTo } from \"../routes\";\n\nexport default () => {\n    signOut();\n    navigateTo(\"/\");\n};\n"],"names":["API_URL","base_url","middleware","uri","method","body","headers","requestBody","JSON","stringify","fetch","this","reduce","requestOptions","request","routes","localStorage","clear","route","hasOwnProperty","Error","location","assign","navigateTo"],"mappings":"gyBAAA,IAAMA,EAAU,4BAgDM,0BA7CNC,EAAUC,yGACdD,MAAAA,IACAA,EAAWD,QAEVC,SAAWA,EACZC,MAAAA,IACAA,EAAa,SAEZA,WAAaA,yDAEdC,EAAKC,EAAQC,EAAMC,OACnBC,SACAF,MAAAA,IACAE,EAAcC,KAAKC,UAAUJ,IAE1BK,MACHC,KAAKV,SAAWE,OAEXD,WAAWU,OACZ,SAACC,EAAgBX,UAAeA,EAAWW,IAC3C,CACIT,OAAQA,EACRC,KAAME,EACND,0BAA2B,oBAAuBA,kCAK9DH,UACOQ,KAAKG,QAAQX,EAAK,oCAExBA,EAAKE,UACCM,KAAKG,QAAQX,EAAK,OAAQE,+BAEjCF,EAAKE,UACEM,KAAKG,QAAQX,EAAK,MAAOE,kCAE7BF,EAAKE,UACDM,KAAKG,QAAQX,EAAK,SAAUE,iCAEjCF,EAAKE,UACAM,KAAKG,QAAQX,EAAK,QAASE,wCAIpB,CAAcL,GChDpC,IAAMe,EAAS,KACN,YACG,gBACC,qBACI,wBACD,sBACD,sBACC,+BCKZC,aAAaC,QDFV,SAAoBC,OACnBH,EAAOI,eAAeD,SAGhBE,MAAM,uCAAyCF,GAFrDG,SAASC,OAAOP,EAAOG,IEP3BK,CAAW"}